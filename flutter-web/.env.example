# Flutter Web Docker Environment Configuration Template
# Copy this file to .env and fill in your values

# Project Configuration
PROJECT_NAME=your-project-name
GITHUB_REPO=https://github.com/your-org/your-repo.git

# Firebase Configuration (optional)
FIREBASE_PROJECT_ID=
FIREBASE_AUTH_DOMAIN=
FIREBASE_STORAGE_BUCKET=
FIREBASE_MESSAGING_SENDER_ID=
FIREBASE_APP_ID=
FIREBASE_MEASUREMENT_ID=

# Google Cloud Configuration
GOOGLE_CLOUD_PROJECT=your-gcp-project

# Authentication Method (IMPORTANT - Choose one):
# Option 1: Service Account Key (RECOMMENDED for containers)
# 1. Download service account key from GCP Console
# 2. Place it in ./auth/service-account-key.json
# 3. Leave these defaults unchanged:
USE_HOST_GCLOUD_AUTH=false
GOOGLE_APPLICATION_CREDENTIALS=/home/developer/.gcloud/service-account-key.json

# Option 2: Host gcloud credentials (only for local development)
# Uncomment these lines to use host credentials:
# USE_HOST_GCLOUD_AUTH=true
# GOOGLE_APPLICATION_CREDENTIALS=

# GitHub Configuration
# Create a personal access token at: https://github.com/settings/tokens
GITHUB_TOKEN=ghp_YOUR_TOKEN_HERE
GITHUB_USERNAME="Your Name"
GITHUB_EMAIL=your-email@users.noreply.github.com

# Flutter Configuration
FLUTTER_CHANNEL=stable
FLUTTER_VERSION=3.32.0

# Container Configuration
CONTAINER_NAME=flutter-web-dev
# Path to your Flutter project on host machine
WORKSPACE_MOUNT=/path/to/your/flutter/project

# Port Configuration (adjust if conflicts exist)
WEB_PORT=8080
DEBUG_PORT=5858

# Development Environment
ENVIRONMENT=development

# Claude Code Authentication (optional)
# Get your API key at: https://console.anthropic.com/
ANTHROPIC_API_KEY=

# Docker Registry (optional - for pushing images)
DOCKER_USERNAME=
DOCKER_PASSWORD=
DOCKER_REGISTRY=docker.io

# Additional API Keys (optional)
OPENAI_API_KEY=
GEMINI_API_KEY=